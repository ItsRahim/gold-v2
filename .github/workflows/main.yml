on:
  push:
    branches:
      - main
    paths:
      - 'rgts-common/**'
      - 'rgts-kafka-service/**'
      - 'rgts-pricing-service/**'
      - 'rgts-proto-service/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: [
          "rgts-common",
          "rgts-kafka-service",
          "rgts-pricing-service",
          "rgts-proto-service"
        ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'

      - name: Check for changes
        id: check-changes
        run: |
          changes=$(git diff --name-only HEAD^ HEAD "${{ matrix.folder }}")
          if [ -n "$changes" ]; then
            echo "Changes detected in ${{ matrix.folder }}"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "No changes in ${{ matrix.folder }}"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Build with Maven
        if: steps.check-changes.outputs.changed == 'true'
        run: |
          cd ${{ matrix.folder }}
          mvn clean install

      - name: Format Java Code
        if: steps.check-changes.outputs.changed == 'true'
        run: |
          cd ${{ matrix.folder }}
          mvn -B com.spotify.fmt:fmt-maven-plugin:format

      - name: Commit and Push Formatted Code
        if: steps.check-changes.outputs.changed == 'true'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          # Pull latest changes to avoid push conflicts
          git pull --rebase origin main
          
          git add ${{ matrix.folder }}
          git commit -m "Apply code formatting for ${{ matrix.folder }}" || echo "No changes to commit"
          
          # Retry push with rebase
          git push || (git pull --rebase origin main && git push)

      - name: Log in to Docker Hub
        if: steps.check-changes.outputs.changed == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # - name: Log in to Docker Hub
      #   if: env.ENABLE_BUILD != 'false'
      #   run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      # - name: Build and push Docker image
      #   if: env.changed == 'true' && env.ENABLE_BUILD != 'false'
      #   run: |
      #     docker build -t rahimahmed/${{ matrix.folder }} -f ${{ matrix.folder }}/Dockerfile .
      #     docker push rahimahmed/${{ matrix.folder }}
