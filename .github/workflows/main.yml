name: Build, Test, and Publish

on:
  push:
    branches:
      - main
    paths:
      - '.github/**'
      - 'rgts-cache-manager/**'
      - 'rgts-common/**'
      - 'rgts-config-server/**'
      - 'rgts-email-service/**'
      - 'rgts-eureka-server/**'
      - 'rgts-gateway-service/**'
      - 'rgts-kafka-service/**'
      - 'rgts-pricing-service/**'
      - 'rgts-proto-service/**'
      - 'rgts-python-api/**'
      - 'rgts-storage-service/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: [ "rgts-authentication-service", "rgts-cache-manager", "rgts-common", "rgts-config-server", "rgts-email-service", "rgts-eureka-server", "rgts-gateway-service", "rgts-pricing-service", "rgts-storage-service" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build and Test
        run: mvn clean install

  publish:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        folder: [ "rgts-authentication-service", "rgts-config-server", "rgts-email-service", "rgts-eureka-server", "rgts-gateway-service", "rgts-pricing-service", "rgts-python-api" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image to GHCR
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME=ghcr.io/${OWNER}/${{ matrix.folder }}:latest
          docker build -f ${{ matrix.folder }}/Dockerfile -t $IMAGE_NAME .
          docker push $IMAGE_NAME
