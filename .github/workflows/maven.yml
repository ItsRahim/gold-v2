name: Build Code & Push to Docker
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    paths:
      - 'rgts-common/**'
      - 'rgts-kafka-service/**'
      - 'rgts-pricing-service/**'
      - 'rgts-proto-service/**'

env:
  DOCKER_USERNAME: rahimahmed
  JAVA_VERSION: 17
  MAVEN_ARGS: -B -ntp

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: [
          "rgts-common",
          "rgts-kafka-service",
          "rgts-pricing-service",
          "rgts-proto-service"
        ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Format Java Code
        run: |
          mvn -B com.spotify.fmt:fmt-maven-plugin:format
        working-directory: ${{ matrix.folder }}

      # Build and test
      - name: Build with Maven
        run: |
          mvn clean verify ${{ env.MAVEN_ARGS }}
        working-directory: ${{ matrix.folder }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Build and Push Docker Image
#        if: github.ref == 'refs/heads/main'
#        run: |
#          # Login to Docker Hub
#          echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
#
#          # Build Docker image
#          docker build \
#            -t ${{ env.DOCKER_USERNAME }}/${{ matrix.folder }}:${{ github.sha }} \
#            -t ${{ env.DOCKER_USERNAME }}/${{ matrix.folder }}:latest \
#            -f ${{ matrix.folder }}/Dockerfile .
#
#          # Push images
#          docker push ${{ env.DOCKER_USERNAME }}/${{ matrix.folder }}:${{ github.sha }}
#          docker push ${{ env.DOCKER_USERNAME }}/${{ matrix.folder }}:latest
#        working-directory: .

permissions:
  contents: read
  packages: write