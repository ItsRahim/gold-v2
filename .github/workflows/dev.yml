name: Build Code & Test

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    outputs:
      build-cache-key: ${{ steps.cache.outputs.cache-hit }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        id: cache
        uses: actions/cache@v4.2.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build with Maven (no tests)
        run: mvn clean install -DskipTests

  format:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make format.sh executable
        run: chmod +x format.sh

      - name: Run formatting script
        run: ./format.sh
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}

  test:
    runs-on: ubuntu-latest
    needs: format

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Restore Maven cache
        uses: actions/cache@v4.2.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Run tests
        run: mvn test

  code-scan:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Set up JDK 21
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ItsRahim_gold-v2

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
    if: "!startsWith(github.head_ref, 'renovate/')"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Restore Maven cache
        uses: actions/cache@v4.2.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Make owasp.sh executable
        run: chmod +x owasp.sh

      - name: Run OWASP Dependency-Check
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
        run: ./owasp.sh
