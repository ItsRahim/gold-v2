name: Build Code & Test

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    outputs:
      build-cache-key: ${{ steps.cache.outputs.cache-hit }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        id: cache
        uses: actions/cache@v4.2.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build with Maven (no tests)
        run: mvn clean install -DskipTests

  format:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make format.sh executable
        run: chmod +x format.sh

      - name: Run formatting script
        run: ./format.sh
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}

  test:
    runs-on: ubuntu-latest
    needs: format

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Restore Maven cache
        uses: actions/cache@v4.2.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Run tests
        run: mvn test

  security-scan:
    runs-on: ubuntu-latest
    needs: format
    permissions:
      contents: write
    if: "!startsWith(github.head_ref, 'renovate/')"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Restore Maven cache
        uses: actions/cache@v4.2.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

#      - name: Run OWASP Dependency-Check
#        env:
#          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
#        run: |
#          mkdir -p security-reports
#          mvn org.owasp:dependency-check-maven:check \
#            -DnvdApiKey=${NVD_API_KEY} \
#            -Dformat=HTML \
#            -DoutputDirectory=security-reports
#
#      - name: Commit OWASP report to branch
#        run: |
#          git config --global user.name 'github-actions[bot]'
#          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
#          mkdir -p security-reports
#          mv rgts-scheduler-service/target/dependency-check-report.html security-reports/dependency-check.html
#
#          git fetch origin
#          git checkout ${{ github.head_ref || github.ref_name }}
#
#          git add security-reports/dependency-check.html
#          git commit -m "Add OWASP Dependency-Check report [ci skip]" || echo "No changes to commit"
#          git push origin HEAD
