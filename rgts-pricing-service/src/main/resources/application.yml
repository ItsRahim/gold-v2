server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: pricing-service

  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/gold}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      minimum-idle: 2
      maximum-pool-size: 5
      idle-timeout: 10000
      max-lifetime: 30000
      auto-commit: true
      pool-name: HikariCP

  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    properties:
      hibernate:
        format_sql: true

  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    clean-disabled: false
    table: flyway_pricing-service_history

  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:localhost}
      port: ${SPRING_DATA_REDIS_PORT:6379}

eureka:
  client:
    service-url:
      defaultZone: http://${EUREKA_SERVER_HOST:localhost}:${EUREKA_SERVER_PORT:8761}/eureka
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

kafka:
  security-protocol: PLAINTEXT
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9093}
  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
  consumer:
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer

logging:
  level:
    com.rahim: DEBUG
    org.springframework: INFO